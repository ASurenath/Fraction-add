{"ast":null,"code":"const gcd = (a, b) => {\n  //   for (let temp; b !== 0; ) {\n  //     temp = b;\n  //     b = a % b;\n  //     a = temp;\n  //   }\n  return a;\n};\nconst useLcm = (a, b) => {\n  if (a === 0 || b === 0) {\n    return 0;\n  }\n  const gcdValue = gcd(a, b);\n  return a * b;\n};\nexport default useLcm;","map":{"version":3,"names":["gcd","a","b","useLcm","gcdValue"],"sources":["/home/anagha/fraction-add-2/src/Hooks/useLcm.js"],"sourcesContent":["const gcd = (a, b) => {\n  //   for (let temp; b !== 0; ) {\n  //     temp = b;\n  //     b = a % b;\n  //     a = temp;\n  //   }\n  return a;\n};\nconst useLcm = (a, b) => {\n  if (a === 0 || b === 0) {\n    return 0;\n  }\n  const gcdValue = gcd(a, b);\n  return a * b;\n};\nexport default useLcm;\n"],"mappings":"AAAA,MAAMA,GAAG,GAAGA,CAACC,CAAC,EAAEC,CAAC,KAAK;EACpB;EACA;EACA;EACA;EACA;EACA,OAAOD,CAAC;AACV,CAAC;AACD,MAAME,MAAM,GAAGA,CAACF,CAAC,EAAEC,CAAC,KAAK;EACvB,IAAID,CAAC,KAAK,CAAC,IAAIC,CAAC,KAAK,CAAC,EAAE;IACtB,OAAO,CAAC;EACV;EACA,MAAME,QAAQ,GAAGJ,GAAG,CAACC,CAAC,EAAEC,CAAC,CAAC;EAC1B,OAAOD,CAAC,GAAGC,CAAC;AACd,CAAC;AACD,eAAeC,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}