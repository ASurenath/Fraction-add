{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nconst useDisplayText = (list, speed = 500) => {\n  _s();\n  const [displayText, setDisplayText] = useState('');\n  useEffect(() => {\n    let i = 0;\n    const typingInterval = setInterval(() => {\n      if (i < text.length) {\n        setDisplayText(prevText => prevText + text.charAt(i));\n        i++;\n      } else {\n        clearInterval(typingInterval);\n      }\n    }, speed);\n    return () => {\n      clearInterval(typingInterval);\n    };\n  }, [text, speed]);\n  return displayText;\n};\n_s(useDisplayText, \"Z72AqRalvcuvuUyHd5OLwsN/cpk=\");\nexport default useDisplayText;","map":{"version":3,"names":["useState","useEffect","useDisplayText","list","speed","_s","displayText","setDisplayText","i","typingInterval","setInterval","text","length","prevText","charAt","clearInterval"],"sources":["/home/anagha/fraction-add-2/src/Hooks/useTypewritter.js"],"sourcesContent":["import  { useState, useEffect } from 'react';\n\nconst useDisplayText = (list, speed = 500) => {\n  const [displayText, setDisplayText] = useState('');\n  useEffect(() => {\n    let i = 0;\n    const typingInterval = setInterval(() => {\n      if (i < text.length) {\n        setDisplayText(prevText => prevText + text.charAt(i));\n        i++;\n      } else {\n        clearInterval(typingInterval);\n      }\n    }, speed);\n\n    return () => {\n      clearInterval(typingInterval);\n    };\n  }, [text, speed]);\n\n  return displayText;\n};\nexport default useDisplayText"],"mappings":";AAAA,SAAUA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE5C,MAAMC,cAAc,GAAGA,CAACC,IAAI,EAAEC,KAAK,GAAG,GAAG,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAClDC,SAAS,CAAC,MAAM;IACd,IAAIO,CAAC,GAAG,CAAC;IACT,MAAMC,cAAc,GAAGC,WAAW,CAAC,MAAM;MACvC,IAAIF,CAAC,GAAGG,IAAI,CAACC,MAAM,EAAE;QACnBL,cAAc,CAACM,QAAQ,IAAIA,QAAQ,GAAGF,IAAI,CAACG,MAAM,CAACN,CAAC,CAAC,CAAC;QACrDA,CAAC,EAAE;MACL,CAAC,MAAM;QACLO,aAAa,CAACN,cAAc,CAAC;MAC/B;IACF,CAAC,EAAEL,KAAK,CAAC;IAET,OAAO,MAAM;MACXW,aAAa,CAACN,cAAc,CAAC;IAC/B,CAAC;EACH,CAAC,EAAE,CAACE,IAAI,EAAEP,KAAK,CAAC,CAAC;EAEjB,OAAOE,WAAW;AACpB,CAAC;AAACD,EAAA,CAnBIH,cAAc;AAoBpB,eAAeA,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}