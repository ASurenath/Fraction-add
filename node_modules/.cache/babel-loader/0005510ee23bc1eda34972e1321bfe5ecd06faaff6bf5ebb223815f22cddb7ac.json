{"ast":null,"code":"var _jsxFileName = \"/home/anagha/fraction-add-2/src/Frames/Frame1.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Fraction from \"../Components/Fraction\";\nimport useTypewriter from \"../Hooks/useTypewritter\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Frame1({\n  num1,\n  denom1,\n  num2,\n  denom2,\n  lcm\n}) {\n  _s();\n  const [step, setStep] = useState(0);\n  useEffect(() => {\n    //Implementing the setInterval method\n    const interval = setInterval(() => {\n      setStep(step + 1);\n      if (step >= 20) {\n        clearInterval(interval);\n      }\n    }, 1000);\n\n    //Clearing the interval\n    return () => clearInterval(interval);\n  }, [step]);\n  const text1A = [`Both ${num1}/${denom1} and ${num2}/${denom2} have different denominators.`, ` We need to find the common denominator.`, ` For that, we need to find the least common multiple(LCM) of both denominators.`];\n  const text1B = [`Both ${num1}/${denom1} and ${num2}/${denom2} have the same denominator. `, `So we can easily add them.`];\n  const renderButtons = () => {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-100 d-flex flex-column align-items-center\",\n    children: [step >= 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"outer-grid appear\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [num1, \"/\", denom1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Fraction, {\n          num: num1,\n          denom: denom1,\n          color: \"blue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"appear\",\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"outer-grid appear mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [num2, \"/\", denom2]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Fraction, {\n          num: num2,\n          denom: denom2,\n          color: \"yellow\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), step >= 1 && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"appear bad-script fs-2 text-left\",\n      children: text1A[0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 19\n    }, this), step >= 2 && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"appear bad-script fs-2 text-left\",\n      children: text1A[1]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 19\n    }, this), step >= 3 && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"appear bad-script fs-2 text-left\",\n      children: text1A[2]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 19\n    }, this), step >= 4 && renderButtons()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this)\n  // </div>\n  ;\n}\n_s(Frame1, \"MgGwu8h9uDeT1hyi5booJzTce8M=\");\n_c = Frame1;\nexport default Frame1;\nvar _c;\n$RefreshReg$(_c, \"Frame1\");","map":{"version":3,"names":["React","useEffect","useState","Fraction","useTypewriter","jsxDEV","_jsxDEV","Fragment","_Fragment","Frame1","num1","denom1","num2","denom2","lcm","_s","step","setStep","interval","setInterval","clearInterval","text1A","text1B","renderButtons","className","children","fileName","_jsxFileName","lineNumber","columnNumber","num","denom","color","_c","$RefreshReg$"],"sources":["/home/anagha/fraction-add-2/src/Frames/Frame1.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Fraction from \"../Components/Fraction\";\nimport useTypewriter from \"../Hooks/useTypewritter\";\n\nfunction Frame1({ num1, denom1, num2, denom2,lcm }) {\n  const [step,setStep]=useState(0)\n  useEffect(() => {\n    //Implementing the setInterval method\n    const interval = setInterval(() => {\n        setStep(step + 1);\n        if (step >= 20) {\n            clearInterval(interval);\n        }\n    }, 1000);\n\n    //Clearing the interval\n    return () => clearInterval(interval);\n}, [step]);\n  \n  const text1A=[`Both ${num1}/${denom1} and ${num2}/${denom2} have different denominators.`,\n  ` We need to find the common denominator.`,\n  ` For that, we need to find the least common multiple(LCM) of both denominators.`]\n  const text1B=[`Both ${num1}/${denom1} and ${num2}/${denom2} have the same denominator. `,\n  `So we can easily add them.`]\n  const renderButtons = () => {\n    \n  }\n  return (\n    <div className=\"w-100 d-flex flex-column align-items-center\">\n        {step>=0&&<>\n          <div className=\"outer-grid appear\">\n            <div>\n              <h1>\n                {num1}/{denom1}\n              </h1>\n            </div>\n            <Fraction\n              num={num1}\n              denom={denom1}\n              color={\"blue\"}\n            />\n          </div>\n          <h1 className=\"appear\">+</h1>\n          <div className=\"outer-grid appear mb-3\">\n            <div>\n              <h1>\n                {num2}/\n                {denom2}\n              </h1>\n            </div>\n            <Fraction\n              num={num2}\n              denom={denom2}\n              color={\"yellow\"}\n            />\n          </div>\n        </>}\n\n        {step>=1&&<p className=\"appear bad-script fs-2 text-left\">{text1A[0]}</p>}   \n        {step>=2&&<p className=\"appear bad-script fs-2 text-left\">{text1A[1]}</p>}  \n        {step>=3&&<p className=\"appear bad-script fs-2 text-left\">{text1A[2]}</p>}   \n        {step>=4&&renderButtons()}\n      </div>\n    // </div>\n  );\n}\n\nexport default Frame1;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}