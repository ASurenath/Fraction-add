{"ast":null,"code":"const useLcm = (a, b) => {\n  function gcd(a, b) {\n    for (let temp = b; b !== 0;) {\n      b = a % b;\n      a = temp;\n      temp = b;\n    }\n    return a;\n  }\n  const gcdValue = gcd(a, b);\n  console.log(\"gcdValue\", gcdValue);\n  console.log(\"a * b / gcdValue\", a * b / gcdValue);\n  return a * b / gcdValue;\n};\nexport default useLcm;","map":{"version":3,"names":["useLcm","a","b","gcd","temp","gcdValue","console","log"],"sources":["/home/anagha/fraction-add-2/src/Hooks/useLcm.js"],"sourcesContent":["const useLcm = (a, b) => {\n  function gcd(a, b) {\n    for (let temp = b; b !== 0; ) {\n      b = a % b;\n      a = temp;\n      temp = b;\n    }\n    return a;\n  }\n  const gcdValue = gcd(a, b);\n  console.log(\"gcdValue\", gcdValue);\n  console.log(\"a * b / gcdValue\", (a * b) / gcdValue);\n  return (a * b) / gcdValue;\n};\nexport default useLcm;\n"],"mappings":"AAAA,MAAMA,MAAM,GAAGA,CAACC,CAAC,EAAEC,CAAC,KAAK;EACvB,SAASC,GAAGA,CAACF,CAAC,EAAEC,CAAC,EAAE;IACjB,KAAK,IAAIE,IAAI,GAAGF,CAAC,EAAEA,CAAC,KAAK,CAAC,GAAI;MAC5BA,CAAC,GAAGD,CAAC,GAAGC,CAAC;MACTD,CAAC,GAAGG,IAAI;MACRA,IAAI,GAAGF,CAAC;IACV;IACA,OAAOD,CAAC;EACV;EACA,MAAMI,QAAQ,GAAGF,GAAG,CAACF,CAAC,EAAEC,CAAC,CAAC;EAC1BI,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEF,QAAQ,CAAC;EACjCC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAGN,CAAC,GAAGC,CAAC,GAAIG,QAAQ,CAAC;EACnD,OAAQJ,CAAC,GAAGC,CAAC,GAAIG,QAAQ;AAC3B,CAAC;AACD,eAAeL,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}