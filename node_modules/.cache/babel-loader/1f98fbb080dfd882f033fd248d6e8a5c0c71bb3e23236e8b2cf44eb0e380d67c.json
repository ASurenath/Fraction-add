{"ast":null,"code":"const useLcm = (a, b) => {\n  if (a === 0 || b === 0) {\n    return 0;\n  }\n  function gcd(a, b) {\n    for (let temp; b !== 0;) {\n      temp = b;\n      b = a % b;\n      a = temp;\n    }\n    return a;\n  }\n  const gcdValue = gcd(a, b);\n  return a * b / gcdValue;\n};\nexport default useLcm;","map":{"version":3,"names":["useLcm","a","b","gcd","temp","gcdValue"],"sources":["/home/anagha/fraction-add-2/src/Hooks/useLcm.js"],"sourcesContent":["const useLcm = (a, b) => {\n  if (a === 0 || b === 0) {\n    return 0;\n  }\n\n  function gcd(a, b) {\n    for (let temp; b !== 0; ) {\n      temp = b;\n      b = a % b;\n      a = temp;\n    }\n    return a;\n  }\n\n  const gcdValue = gcd(a, b);\n  return (a * b) / gcdValue;\n};\nexport default useLcm;\n"],"mappings":"AAAA,MAAMA,MAAM,GAAGA,CAACC,CAAC,EAAEC,CAAC,KAAK;EACvB,IAAID,CAAC,KAAK,CAAC,IAAIC,CAAC,KAAK,CAAC,EAAE;IACtB,OAAO,CAAC;EACV;EAEA,SAASC,GAAGA,CAACF,CAAC,EAAEC,CAAC,EAAE;IACjB,KAAK,IAAIE,IAAI,EAAEF,CAAC,KAAK,CAAC,GAAI;MACxBE,IAAI,GAAGF,CAAC;MACRA,CAAC,GAAGD,CAAC,GAAGC,CAAC;MACTD,CAAC,GAAGG,IAAI;IACV;IACA,OAAOH,CAAC;EACV;EAEA,MAAMI,QAAQ,GAAGF,GAAG,CAACF,CAAC,EAAEC,CAAC,CAAC;EAC1B,OAAQD,CAAC,GAAGC,CAAC,GAAIG,QAAQ;AAC3B,CAAC;AACD,eAAeL,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}