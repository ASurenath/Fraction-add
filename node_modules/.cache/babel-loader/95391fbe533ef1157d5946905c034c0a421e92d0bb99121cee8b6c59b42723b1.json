{"ast":null,"code":"var _jsxFileName = \"/home/anagha/fraction-add-2/src/Frames/Frame1.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Fraction from \"../Components/Fraction\";\nimport useTypewriter from \"../Hooks/useTypewritter\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Frame1({\n  num1,\n  denom1,\n  num2,\n  denom2,\n  lcm\n}) {\n  _s();\n  const [step, setStep] = useState(0);\n  useEffect(() => {\n    //Implementing the setInterval method\n    const interval = setInterval(() => {\n      setStep(step + 1);\n    }, 1000);\n\n    //Clearing the interval\n    return () => clearInterval(interval);\n  }, [step]);\n  const text1A = [`Both ${num1}/${denom1} and ${num2}/${denom2} have different denominators.`, ` So we need to find the common denominator.`, ` For that, we need to find the least common multiple(LCM) of both denominators.`];\n  const text1B = [`Both ${num1}/${denom1} and ${num2}/${denom2} have the same denominator. `, `So we can easily add them.`];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [step >= 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"outer-grid appear\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [num1, \"/\", denom1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Fraction, {\n          num: num1,\n          denom: denom1,\n          color: \"blue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"outer-grid appea\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [num2, \"/\", denom2]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Fraction, {\n          num: num2,\n          denom: denom2,\n          color: \"yellow\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"appear bad-script fs-2 text-left\",\n      children: text1A[0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true)\n  // </div>\n  ;\n}\n_s(Frame1, \"MgGwu8h9uDeT1hyi5booJzTce8M=\");\n_c = Frame1;\nexport default Frame1;\nvar _c;\n$RefreshReg$(_c, \"Frame1\");","map":{"version":3,"names":["React","useEffect","useState","Fraction","useTypewriter","jsxDEV","_jsxDEV","Fragment","_Fragment","Frame1","num1","denom1","num2","denom2","lcm","_s","step","setStep","interval","setInterval","clearInterval","text1A","text1B","children","className","fileName","_jsxFileName","lineNumber","columnNumber","num","denom","color","_c","$RefreshReg$"],"sources":["/home/anagha/fraction-add-2/src/Frames/Frame1.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Fraction from \"../Components/Fraction\";\nimport useTypewriter from \"../Hooks/useTypewritter\";\n\nfunction Frame1({ num1, denom1, num2, denom2,lcm }) {\n  const [step,setStep]=useState(0)\n  useEffect(() => {\n    //Implementing the setInterval method\n    const interval = setInterval(() => {\n        setStep(step + 1);\n    }, 1000);\n\n    //Clearing the interval\n    return () => clearInterval(interval);\n}, [step]);\n  \n  const text1A=[`Both ${num1}/${denom1} and ${num2}/${denom2} have different denominators.`,\n  ` So we need to find the common denominator.`,\n  ` For that, we need to find the least common multiple(LCM) of both denominators.`]\n  const text1B=[`Both ${num1}/${denom1} and ${num2}/${denom2} have the same denominator. `,\n  `So we can easily add them.`]\n  return (\n    <>\n        {step>=0&&<>\n          <div className=\"outer-grid appear\">\n            <div>\n              <h1>\n                {num1}/{denom1}\n              </h1>\n            </div>\n            <Fraction\n              num={num1}\n              denom={denom1}\n              color={\"blue\"}\n            />\n          </div>\n          <h1>+</h1>\n          <div className=\"outer-grid appea\">\n            <div>\n              <h1>\n                {num2}/\n                {denom2}\n              </h1>\n            </div>\n            <Fraction\n              num={num2}\n              denom={denom2}\n              color={\"yellow\"}\n            />\n          </div>\n        </>}\n\n        <p className=\"appear bad-script fs-2 text-left\">{text1A[0]}</p>   \n      </>\n    // </div>\n  );\n}\n\nexport default Frame1;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}