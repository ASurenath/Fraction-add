{"ast":null,"code":"var _jsxFileName = \"/home/anagha/fraction-add-2/src/Components/Fraction.js\";\nimport React from \"react\";\nimport \"./Fraction.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Fraction({\n  num,\n  denom,\n  split,\n  color\n}) {\n  const style1 = {\n    gridTemplateColumns: `repeat(${denom}, 1fr)`\n  };\n  const style3 = {\n    gridTemplateColumns: `repeat(${split}, 1fr)`\n  };\n  const style2 = {\n    backgroundColor: color\n  };\n  const rows = Array.from({\n    length: Math.floor(num / denom)\n  }, (_, index) => index);\n  const elements = Array.from({\n    length: denom\n  }, (_, index) => {\n    if (index < num % denom) {\n      return true;\n    } else {\n      return false;\n    }\n  });\n  const splitElements = Array.from({\n    length: split ? split : 0\n  }, (_, index) => index);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !num || !denom ? console.error(\"'num' and 'denom' are required for the component 'Fraction'\") : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [rows.map((i, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rounded mx-auto my-1 grid-container\",\n        style: style1,\n        children: elements.map((j, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            ...style2,\n            ...(split ? style3 : {})\n          },\n          children: split && /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 29\n          }, this)\n        }, `item-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this))\n      }, `grid-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this)), elements[0] && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rounded mx-auto my-1 grid-container\",\n        style: style1,\n        children: elements.map((k, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            ...(k ? style2 : {}),\n            ...(split ? style3 : {})\n          },\n          children: split && splitElements.map(k = /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 49\n          }, this))\n        }, `item2-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_c = Fraction;\nexport default Fraction;\nvar _c;\n$RefreshReg$(_c, \"Fraction\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","Fraction","num","denom","split","color","style1","gridTemplateColumns","style3","style2","backgroundColor","rows","Array","from","length","Math","floor","_","index","elements","splitElements","children","console","error","map","i","className","style","j","fileName","_jsxFileName","lineNumber","columnNumber","k","_c","$RefreshReg$"],"sources":["/home/anagha/fraction-add-2/src/Components/Fraction.js"],"sourcesContent":["import React from \"react\";\nimport \"./Fraction.css\";\nfunction Fraction({ num, denom, split, color }) {\n  const style1 = {\n    gridTemplateColumns: `repeat(${denom}, 1fr)`,\n  };\n  const style3 = {\n    gridTemplateColumns: `repeat(${split}, 1fr)`,\n  };\n  const style2 = {\n    backgroundColor: color,\n  };\n  const rows = Array.from(\n    { length: Math.floor(num / denom) },\n    (_, index) => index\n  );\n  const elements = Array.from({ length: denom }, (_, index) => {\n    if (index < num % denom) {\n      return true;\n    } else {\n      return false;\n    }\n  });\n  const splitElements = Array.from(\n    { length: split ? split : 0 },\n    (_, index) => index\n  );\n\n  return (\n    <>\n      {!num || !denom ? (\n        console.error(\n          \"'num' and 'denom' are required for the component 'Fraction'\"\n        )\n      ) : (\n        <div>\n          {rows.map((i, index) => (\n            <div\n              key={`grid-${index}`}\n              className=\"rounded mx-auto my-1 grid-container\"\n              style={style1}\n            >\n              {elements.map((j, index) => (\n                <div\n                  key={`item-${index}`}\n                  style={{ ...style2, ...(split ? style3 : {}) }}\n                >\n                  {split && <div></div>}\n                </div>\n              ))}\n            </div>\n          ))}\n\n          {elements[0] && (\n            <div className=\"rounded mx-auto my-1 grid-container\" style={style1}>\n              {elements.map((k, index) => (\n                <div\n                  key={`item2-${index}`}\n                  style={{ ...(k ? style2 : {}), ...(split ? style3 : {}) }}\n                >\n                  {split && splitElements.map(k=<div></div>)}\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default Fraction;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}