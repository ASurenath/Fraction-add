{"ast":null,"code":"var _jsxFileName = \"/home/anagha/fraction-add-2/src/Frames/Frame2A.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Frame2A({\n  num1,\n  denom1,\n  num2,\n  denom2,\n  lcm,\n  setFrameNo\n}) {\n  _s();\n  const [step, setStep] = useState(0);\n  useEffect(() => {\n    //Implementing the setInterval method\n    const interval = setInterval(() => {\n      setStep(step + 1);\n      if (step >= 20) {\n        clearInterval(interval);\n      }\n    }, 1000);\n\n    //Clearing the interval\n    return () => clearInterval(interval);\n  }, [step]);\n  const textA = [`LCM of ${denom1} and ${denom2} is ${lcm}.`, `Now, we need to find the numerators.`, `We need to find the numerators.`, ` For that, we need to find the least common multiple(LCM) of both denominators.`];\n  const renderButtons = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-evenly w-100\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: () => setFrameNo(1),\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: () => setFrameNo(0),\n        children: \"Start Over\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: () => setFrameNo(3),\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Frame2A\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 10\n  }, this);\n}\n_s(Frame2A, \"NrA/6fXDv8xclF3w9SjbVQPSnu8=\");\n_c = Frame2A;\nexport default Frame2A;\nvar _c;\n$RefreshReg$(_c, \"Frame2A\");","map":{"version":3,"names":["React","useEffect","useState","Button","jsxDEV","_jsxDEV","Frame2A","num1","denom1","num2","denom2","lcm","setFrameNo","_s","step","setStep","interval","setInterval","clearInterval","textA","renderButtons","className","children","variant","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/anagha/fraction-add-2/src/Frames/Frame2A.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\n\nfunction Frame2A({ num1, denom1, num2, denom2,lcm , setFrameNo}) {\n    const [step, setStep] = useState(0);\n    useEffect(() => {\n      //Implementing the setInterval method\n      const interval = setInterval(() => {\n        setStep(step + 1);\n        if (step >= 20) {\n          clearInterval(interval);\n        }\n      }, 1000);\n  \n      //Clearing the interval\n      return () => clearInterval(interval);\n    }, [step]);\n    const textA = [\n        `LCM of ${denom1} and ${denom2} is ${lcm}.`,\n        `Now, we need to find the numerators.`,\n        `We need to find the numerators.`,\n        ` For that, we need to find the least common multiple(LCM) of both denominators.`,\n      ];\n    const renderButtons = () => {\n        return (\n          <div className=\"d-flex justify-content-evenly w-100\">\n            <Button variant=\"primary\" onClick={()=>setFrameNo(1)}>\n              Back\n            </Button>\n            <Button variant=\"primary\" onClick={()=>setFrameNo(0)}>\n              Start Over\n            </Button>\n            <Button variant=\"primary\" onClick={()=>setFrameNo(3)}>\n              Next\n            </Button>\n          </div>\n        );\n      };\n  return <div>Frame2A</div>;\n}\n\nexport default Frame2A;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,MAAM,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,SAASC,OAAOA,CAAC;EAAEC,IAAI;EAAEC,MAAM;EAAEC,IAAI;EAAEC,MAAM;EAACC,GAAG;EAAGC;AAAU,CAAC,EAAE;EAAAC,EAAA;EAC7D,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EACnCD,SAAS,CAAC,MAAM;IACd;IACA,MAAMe,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjCF,OAAO,CAACD,IAAI,GAAG,CAAC,CAAC;MACjB,IAAIA,IAAI,IAAI,EAAE,EAAE;QACdI,aAAa,CAACF,QAAQ,CAAC;MACzB;IACF,CAAC,EAAE,IAAI,CAAC;;IAER;IACA,OAAO,MAAME,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAE,CAACF,IAAI,CAAC,CAAC;EACV,MAAMK,KAAK,GAAG,CACT,UAASX,MAAO,QAAOE,MAAO,OAAMC,GAAI,GAAE,EAC1C,sCAAqC,EACrC,iCAAgC,EAChC,iFAAgF,CAClF;EACH,MAAMS,aAAa,GAAGA,CAAA,KAAM;IACxB,oBACEf,OAAA;MAAKgB,SAAS,EAAC,qCAAqC;MAAAC,QAAA,gBAClDjB,OAAA,CAACF,MAAM;QAACoB,OAAO,EAAC,SAAS;QAACC,OAAO,EAAEA,CAAA,KAAIZ,UAAU,CAAC,CAAC,CAAE;QAAAU,QAAA,EAAC;MAEtD;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTvB,OAAA,CAACF,MAAM;QAACoB,OAAO,EAAC,SAAS;QAACC,OAAO,EAAEA,CAAA,KAAIZ,UAAU,CAAC,CAAC,CAAE;QAAAU,QAAA,EAAC;MAEtD;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTvB,OAAA,CAACF,MAAM;QAACoB,OAAO,EAAC,SAAS;QAACC,OAAO,EAAEA,CAAA,KAAIZ,UAAU,CAAC,CAAC,CAAE;QAAAU,QAAA,EAAC;MAEtD;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAEV,CAAC;EACL,oBAAOvB,OAAA;IAAAiB,QAAA,EAAK;EAAO;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAC3B;AAACf,EAAA,CApCQP,OAAO;AAAAuB,EAAA,GAAPvB,OAAO;AAsChB,eAAeA,OAAO;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}