{"ast":null,"code":"var _jsxFileName = \"/home/anagha/fraction-add-2/src/Components/Fraction.js\";\nimport React from 'react';\nimport './Fraction.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Fraction({\n  num,\n  denom,\n  split,\n  color\n}) {\n  const style1 = {\n    gridTemplateColumns: `repeat(${denom}, 1fr)`\n  };\n  const style3 = {\n    gridTemplateColumns: `repeat(${split}, 1fr)`\n  };\n  const style2 = {\n    backgroundColor: color\n  };\n  const rows = Array.from({\n    length: Math.floor(num / denom)\n  }, (_, index) => index);\n  const elements = Array.from({\n    length: denom\n  }, (_, index) => {\n    if (index < num % denom) {\n      return true;\n    } else {\n      return false;\n    }\n  });\n  const splitElements = Array.from({\n    length: split ? split : 0\n  }, (_, index) => index);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !num || !denom ? console.error(\"'num' and 'denom' are required for the component 'Fraction'\") : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [rows.map((i, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rounded mx-auto my-1 grid-container\",\n        style: style1,\n        children: elements.map((j, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            ...style2,\n            ...(split ? style3 : {})\n          },\n          children: split && /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 19\n          }, this)\n        }, `item-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }, this))\n      }, `grid-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)), elements[0] && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rounded mx-auto my-1 grid-container\",\n        style: style1,\n        children: elements.map((k, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            ...(k ? style2 : {}),\n            ...(split ? style3 : {})\n          },\n          children: split && /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 17\n          }, this)\n        }, `item2-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 34\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c = Fraction;\nexport default Fraction;\nvar _c;\n$RefreshReg$(_c, \"Fraction\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","Fraction","num","denom","split","color","style1","gridTemplateColumns","style3","style2","backgroundColor","rows","Array","from","length","Math","floor","_","index","elements","splitElements","children","console","error","map","i","className","style","j","fileName","_jsxFileName","lineNumber","columnNumber","k","_c","$RefreshReg$"],"sources":["/home/anagha/fraction-add-2/src/Components/Fraction.js"],"sourcesContent":["import React from 'react'\nimport './Fraction.css'\nfunction Fraction({num,denom,split,color}) {\n\n  const style1={\n    gridTemplateColumns:`repeat(${denom}, 1fr)`,\n  }\n  const style3={\n    gridTemplateColumns:`repeat(${split}, 1fr)`,\n  }\n  const style2={\n    backgroundColor:color\n  }\n  const rows = Array.from({ length: Math.floor(num/denom) }, (_, index) =>index);\n  const elements = Array.from({ length: denom }, (_, index) => {if(index<(num%denom)){return true}else{return false}});\n  const splitElements = Array.from({ length: split?split:0 }, (_, index) => index);\n\n  return (\n    <>\n    {(!num || !denom)? console.error(\"'num' and 'denom' are required for the component 'Fraction'\")\n    :\n\n    \n      <div>\n        {rows.map((i,index)=>\n        <div key={`grid-${index}`} className='rounded mx-auto my-1 grid-container' style={style1}> \n        {elements.map((j,index)=>\n        <div key={`item-${index}`} style={{...style2,...(split?style3:{})}}>\n          {split&&<div></div>}\n        </div>)}\n        </div>\n      )}\n        \n        {elements[0]&&<div className='rounded mx-auto my-1 grid-container' style={style1}> \n        {elements.map((k,index)=><div key={`item2-${index}`} style={{...(k?style2:{}),...(split?style3:{})}}>\n        {split&&<div></div>}\n        </div>)}\n        </div>}\n      </div>\n    \n    }\n    </>\n  )\n}\n\nexport default Fraction"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}